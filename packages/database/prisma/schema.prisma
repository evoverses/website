// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Evo {
  id            Int          @id @default(autoincrement())
  tokenId       BigInt       @unique
  gender        Gender       @default(Unknown)
  generation    Int
  nature        Nature       @default(Unknown)
  rarity        Rarity       @default(Unknown)
  chroma        Chroma?
  species       Species      @default(Unknown)
  types         SpeciesTypes @relation(fields: [species], references: [species])
  totalBreeds   Int          @default(0)
  children      Egg[]
  lastBreedTime DateTime?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  attack        Int          @default(0)
  special       Int          @default(0)
  defense       Int          @default(0)
  resistance    Int          @default(0)
  speed         Int          @default(0)
  size          Float        @default(0)
  xp            Int          @default(0)

  @@map("evos")
}

model Egg {
  id         Int          @id @default(autoincrement())
  tokenId    BigInt       @unique
  species    Species      @default(Unknown)
  types      SpeciesTypes @relation(fields: [species], references: [species])
  generation Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  hatchedAt  DateTime?
  treated    Boolean      @default(false)
  parents    Evo[]

  @@map("eggs")
}

model SpeciesTypes {
  id        Int      @id @default(autoincrement())
  species   Species  @unique
  primary   Element
  secondary Element?
  evos      Evo[]
  eggs      Egg[]

  @@map("species_types")
}

model Collection {
  id            Int      @id @default(autoincrement())
  address       String   @unique @db.Char(42)
  name          String
  description   String
  image         String   @default("")
  bannerImage   String   @default("")
  externalLink  String   @default("")
  collaborators String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("collections")
}

model Trainer {
  id          Int                @id @default(autoincrement())
  tokenId     BigInt             @unique
  name        String
  gender      Gender             @default(Unknown)
  rarity      Rarity             @default(Unknown)
  attuned     Element            @default(None)
  expert      Nature             @default(Unknown)
  specialty   Species            @default(Unknown)
  hairStyle   TrainerHairStyle   @default(Unknown)
  hairColor   TrainerAccentColor @default(Unknown)
  eyeColor    TrainerAccentColor @default(Unknown)
  top         TrainerTop         @default(Unknown)
  topColor    TrainerAccentColor @default(Unknown)
  bottom      TrainerBottom      @default(Unknown)
  bottomColor TrainerAccentColor @default(Unknown)
  bonuses     BonusesOnTrainer[]

  @@map("trainers")
}

model TrainerBonus {
  id       Int                @id @default(autoincrement())
  bonus    Bonus
  discount Float              @default(0.0)
  species  Species?
  nature   Nature?
  element  Element?
  trainers BonusesOnTrainer[]

  @@unique([bonus, discount, species, nature, element], map: "trainer_bonus_unique")
  @@map("trainer_bonuses")
}

model BonusesOnTrainer {
  bonusId   Int
  trainerId Int
  bonus     TrainerBonus @relation(fields: [bonusId], references: [id])
  trainer   Trainer      @relation(fields: [trainerId], references: [id])

  @@unique([bonusId, trainerId], map: "bonus_id_trainer_id_unique")
  @@map("bonus_on_trainer")
}

enum Bonus {
  None
  BreederDiscount
  VendorDiscount
  LastChance
  SpeciesSpecialist
  NatureExpert
  ElementAttuned
}

enum Element {
  None
  Water
  Fire
  Air
  Plant
  Earth
  Light
  Dark
  Mineral
  Corrupt
  Ether
  Bug
  Monster
}

enum Chroma {
  None
  Chroma
  Super
}

enum Rarity {
  Unknown
  Common
  Uncommon
  Rare
  Epic
  Legendary
  Unique
}

enum Species {
  Unknown
  Nissel
  Finantis
  Karoite
  Nuvea
  Hodeon
  Eulocelus
  Arnoriel
  Raptoriel
  Carcoid
  Adhamandra
  Ainepolux
  Kapryno
  Kitsul
  Kitsumbra
  Rattuos
  Beldar
  Belpillar
  Beldarion
  Firemon
  Obryos
  Mosuo
  Lumi
  Glaumer
  Zhilumian
  Onydae
  Skycyx
  Cinyx
  Droserace
  Hydraserace
  Kerval
  Kervalio
  Megakeras
  Gwenbee
  Shazark
  Krokon
  Kradarkus
  Clocarstone
  Qwarzil
  Tokaleaf
  Sunopendra
  Pendraminax
  Yotnar
  Hikarul
  Opal
  Aubelyon
  Flint
  Kraker
  Venuserpien
  Drakava
  Espyke
  Mobyd
  Orcabyd
  Ghorgon
  Mellio
  Fugush
  Morphee
  Morphian
  Morphoon
  Lounn
  Lumiann
  Uzumebach
  Zumestra
  Gemarites
  Methyst
  Spectross
  Tamandu
  Kanitro
  Tytan
  Moffunap
  Nymphel
  Buzzel
  Jarel
  Lumel
  Vultrel
  Allacrow
  Corvalloy
  Jokull
  Vulpyro
  Vulcario
  Vulkran
  Fayde
  Kasscade
  Ruard
  Caerthos
  Ryomizu
  Obsy
  Ceflora
  Carnivyan
  Dhaek
  Drapex
  Metheo
  Glazzyx
  Nythe
  Nyferr
  Wargrim
  Meissa
  Fluozacil
  Zacirel
  Vramakan
  Cyarabat
  Darkali
  Struthor
  Istral
  Magistral
  Norax
  Cyzorak
  Rhinurak
  Trizorak
  Kaos
  Hidden1
  Hidden2
  Hidden3
  Hidden4
  Cephlare
  Cephalopot
  Krakenoa
  Athel
  Athidel
  Athalasia
  Lamphal
  Lamphanuar
  Geckaiba
  Draxill
  Kyrun
  Sauderon
  Ayacinth
  Zhytrous
  Khadmon
  Pikrel
  Puffel
  Bird01
  Bird02
  Fish1geo
  Fish2geo
  CuerpoHeraldo
}

enum Gender {
  Unknown
  Male
  Female
}

enum Nature {
  Unknown
  Dauntless
  Executive
  Restless
  Nervous
  Cunning
  Energetic
  Clever
  Confident
  Ignorant
  Arrogant
  Biting
  Aggressive
  Patient
  Mature
  Sensible
  Calm
  Rude
  Cautious
  Curious
  Discrete
  Loyal
}

enum TrainerAccentColor {
  Unknown
  Blue
  Green
  Pink
  Red
  Yellow
}

enum TrainerSkinTone {
  Unknown
  Chocolate
  Coffee
  Desert
  Mediterranean
  Pale
  Pasty
  SunBurnt
}

enum TrainerHairStyle {
  Unknown
  Emo
  Ahoge
  MediumPixiBangs
  LongWithBangs
}

enum TrainerTop {
  Unknown
  ShirtWithTankTop
  MaleTankTop
  FemaleTankTop
  SleevelessTurtleneck
}

enum TrainerBottom {
  Unknown
  CargoShorts
  DressPants
  SkirtWithStockings
  RunningShorts
}
